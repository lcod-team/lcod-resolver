schemaVersion = "2.0"
id = "lcod://tooling/resolver/internal/prepare-config@0.1.0"
version = "0.1.0"
kind = "function"
summary = "Normalise resolver configuration and capture warnings before dependency resolution."

[deps]
requires = [
  "lcod://tooling/script@1"
]

[inputs.resolverConfig]
summary = "Resolver configuration produced by `load-config`."
required = false
schema = """
{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "object",
  "description": "Resolver configuration returned by load-config."
}"""

[inputs.config]
summary = "Fallback configuration when `resolverConfig` is missing."
required = false
schema = """
{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "object",
  "description": "Fallback configuration if resolverConfig is unavailable."
}"""

[inputs.warnings]
summary = "Warnings emitted while loading configuration."
required = false
schema = """
{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "array",
  "items": { "type": "string" },
  "description": "Warnings emitted during config loading."
}"""

[outputs.normalizedConfig]
summary = "Configuration normalised for dependency resolution."
schema = """
{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "object",
  "description": "Normalized configuration produced by the script."
}"""

[outputs.warnings]
summary = "Warnings propagated to downstream steps."
schema = """
{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "array",
  "items": { "type": "string" },
  "description": "Warnings propagated to subsequent steps."
}"""

[tool]
name = "prepare_config"
description = "Prepare normalized configuration state for dependency resolution."
inputSchema = "schema/input.json"
outputSchema = "schema/output.json"
