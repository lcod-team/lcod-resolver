schemaVersion = "2.0"
id = "lcod://tooling/resolver/internal/build-lock@0.1.0"
version = "0.1.0"
kind = "function"
summary = "Assemble the resolver lock payload and its TOML serialisation."

[deps]
requires = [
  "lcod://tooling/script@1",
  "lcod://axiom/toml/stringify@1",
  "lcod://tooling/value/is_array@0.1.0",
  "lcod://impl/set@1",
  "lcod://flow/if@1"
]

[inputs.descriptor]
summary = "Root descriptor that initiated the resolver."
required = true
schema = """
{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "object",
  "description": "Root descriptor that initiated the resolver."
}"""

[inputs.dependencyGraph]
summary = "Resolved dependencies for the root component."
required = true
schema = """
{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "array",
  "description": "Resolved dependencies for the root component."
}"""

[inputs.warnings]
summary = "Warnings collected while resolving."
required = true
schema = """
{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "array",
  "items": { "type": "string" },
  "description": "Warnings collected while resolving."
}"""

[inputs.rootIntegrity]
summary = "Optional integrity hash for the root descriptor."
required = false
schema = """
{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": ["string", "null"],
  "description": "Optional integrity hash for the root descriptor."
}"""

[outputs.lockDocument]
summary = "Structured lock payload."
schema = """
{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "object",
  "description": "Structured lock payload."
}"""

[outputs.lockText]
summary = "TOML serialisation of the lock payload."
schema = """
{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "string",
  "description": "TOML serialization of the lock payload."
}"""

[outputs.warnings]
summary = "Warnings propagated alongside the lock."
schema = """
{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "array",
  "items": { "type": "string" }
}"""

[tool]
name = "build_lock"
description = "Assemble the lock document and its TOML string."
inputSchema = "schema/input.json"
outputSchema = "schema/output.json"
