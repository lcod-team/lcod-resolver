schemaVersion = "2.0"
id = "lcod://tooling/resolver/internal/load-sources@0.1.0"
version = "0.1.0"
kind = "function"
summary = "Resolve resolver `sources.json` into inline registry catalogue entries."

[deps]
requires = [
  "lcod://tooling/script@1",
  "lcod://axiom/fs/read-file@1",
  "lcod://axiom/hash/sha256@1",
  "lcod://axiom/http/download@1",
  "lcod://axiom/path/join@1",
  "lcod://contract/core/git/clone@1"
]

[inputs.projectPath]
summary = "Base directory of the project invoking the resolver."
required = true
schema = """
{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "string",
  "minLength": 1,
  "description": "Base directory of the project invoking the resolver."
}"""

[inputs.cacheDir]
summary = "Directory used to cache downloaded catalogues."
required = false
schema = """
{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "string",
  "minLength": 1,
  "description": "Directory used to cache downloaded catalogues."
}"""

[inputs.sourcesPath]
summary = "Explicit path to a `sources.json` file."
required = false
schema = """
{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "string",
  "minLength": 1,
  "description": "Explicit path to a sources.json file. Defaults to <projectPath>/sources.json."
}"""

[inputs.resolverConfig]
summary = "Raw resolver configuration used for fallbacks."
required = false
schema = """
{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "object",
  "description": "Raw resolver configuration (resolve.config.json) used for fallbacks."
}"""

[outputs.registrySources]
summary = "Normalised registry sources ready for loading."
schema = """
{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "array",
  "description": "Registry sources normalised to inline/jsonl entries understood by tooling/registry/source/load.",
  "items": {
    "type": "object",
    "required": ["id", "type"],
    "properties": {
      "id": { "type": "string", "minLength": 1 },
      "type": { "type": "string" },
      "priority": { "type": "integer" },
      "defaults": { "type": "object" },
      "lines": { "type": "array", "items": { "type": "object" } },
      "jsonl": { "type": "string" }
    },
    "additionalProperties": true
  }
}"""

[outputs.warnings]
summary = "Warnings gathered while loading catalogue sources."
schema = """
{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "array",
  "items": { "type": "string" }
}"""

[outputs.sourcesPath]
summary = "Resolved path to the `sources.json` file used for this run."
schema = """
{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": ["string", "null"],
  "description": "Resolved path to the sources.json file used for this run."
}"""

[tool]
name = "load_sources"
description = "Read sources.json, fetch referenced catalogues, and emit registry source payloads ready for indexing."
inputSchema = "schema/input.json"
outputSchema = "schema/output.json"
